<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="Success">#28A745</Color>
    <Color x:Key="SuccessHover">#61C880</Color>
    <Color x:Key="SuccessPressed">#218838</Color>

    <Color x:Key="Warning">#F0AD4E</Color>
    <Color x:Key="WarningHover">#EEA236</Color>
    <Color x:Key="WarningPressed">#D98500</Color>

    <Color x:Key="Danger">#DC3545</Color>
    <Color x:Key="DangerHover">#FF4D5C</Color>
    <Color x:Key="DangerPressed">#C82333</Color>

    <Color x:Key="Primary">#0078D7</Color>
    <Color x:Key="PrimaryHover">#006BCC</Color>
    <Color x:Key="PrimaryPressed">#004F8E</Color>

    <Color x:Key="Secondary">#6C757D</Color>
    <Color x:Key="SecondaryHover">#868E96</Color>
    <Color x:Key="SecondaryPressed">#5A6268</Color>

    <Color x:Key="SecondaryColorRes">LightGray</Color>
    <Color x:Key="BackgroundColorRes">#4B4B4B</Color>
    <Color x:Key="FontColorRes">LightGray</Color>

    <SolidColorBrush x:Key="BackgroundColor" Color="{StaticResource BackgroundColorRes}"/>

    <SolidColorBrush x:Key="FontColor" Color="{StaticResource FontColorRes}"/>

    <SolidColorBrush x:Key="SecondaryColor" Color="{StaticResource SecondaryColorRes}"/>

    <SolidColorBrush x:Key="ButtonSuccessBackground" Color="{StaticResource Success}"/>
    <SolidColorBrush x:Key="ButtonSuccessForeground" Color="White"/>
    <SolidColorBrush x:Key="ButtonSuccessBorder" Color="{StaticResource Success}"/>
    <SolidColorBrush x:Key="ButtonSuccessHoverBackground" Color="{StaticResource SuccessHover}"/>
    <SolidColorBrush x:Key="ButtonSuccessHoverBorder" Color="{StaticResource SuccessHover}"/>
    <SolidColorBrush x:Key="ButtonSuccessPressedBackground" Color="{StaticResource SuccessPressed}"/>
    <SolidColorBrush x:Key="ButtonSuccessPressedBorder" Color="{StaticResource SuccessPressed}"/>

    <SolidColorBrush x:Key="ButtonWarningBackground" Color="{StaticResource Warning}"/>
    <SolidColorBrush x:Key="ButtonWarningForeground" Color="White"/>
    <SolidColorBrush x:Key="ButtonWarningBorder" Color="{StaticResource Warning}"/>
    <SolidColorBrush x:Key="ButtonWarningHoverBackground" Color="{StaticResource WarningHover}"/>
    <SolidColorBrush x:Key="ButtonWarningHoverBorder" Color="{StaticResource WarningHover}"/>
    <SolidColorBrush x:Key="ButtonWarningPressedBackground" Color="{StaticResource WarningPressed}"/>
    <SolidColorBrush x:Key="ButtonWarningPressedBorder" Color="{StaticResource WarningPressed}"/>

    <SolidColorBrush x:Key="ButtonDangerBackground" Color="{StaticResource Danger}"/>
    <SolidColorBrush x:Key="ButtonDangerForeground" Color="White"/>
    <SolidColorBrush x:Key="ButtonDangerBorder" Color="{StaticResource Danger}"/>
    <SolidColorBrush x:Key="ButtonDangerHoverBackground" Color="{StaticResource DangerHover}"/>
    <SolidColorBrush x:Key="ButtonDangerHoverBorder" Color="{StaticResource DangerHover}"/>
    <SolidColorBrush x:Key="ButtonDangerPressedBackground" Color="{StaticResource DangerPressed}"/>
    <SolidColorBrush x:Key="ButtonDangerPressedBorder" Color="{StaticResource DangerPressed}"/>

    <SolidColorBrush x:Key="ButtonPrimaryBackground" Color="{StaticResource Primary}"/>
    <SolidColorBrush x:Key="ButtonPrimaryForeground" Color="White"/>
    <SolidColorBrush x:Key="ButtonPrimaryBorder" Color="{StaticResource Primary}"/>
    <SolidColorBrush x:Key="ButtonPrimaryHoverBackground" Color="{StaticResource PrimaryHover}"/>
    <SolidColorBrush x:Key="ButtonPrimaryHoverBorder" Color="{StaticResource PrimaryHover}"/>
    <SolidColorBrush x:Key="ButtonPrimaryPressedBackground" Color="{StaticResource PrimaryPressed}"/>
    <SolidColorBrush x:Key="ButtonPrimaryPressedBorder" Color="{StaticResource PrimaryPressed}"/>

    <SolidColorBrush x:Key="ButtonSecondaryBackground" Color="{StaticResource Secondary}"/>
    <SolidColorBrush x:Key="ButtonSecondaryForeground" Color="White"/>
    <SolidColorBrush x:Key="ButtonSecondaryBorder" Color="{StaticResource Secondary}"/>
    <SolidColorBrush x:Key="ButtonSecondaryHoverBackground" Color="{StaticResource SecondaryHover}"/>
    <SolidColorBrush x:Key="ButtonSecondaryHoverBorder" Color="{StaticResource SecondaryHover}"/>
    <SolidColorBrush x:Key="ButtonSecondaryPressedBackground" Color="{StaticResource SecondaryPressed}"/>
    <SolidColorBrush x:Key="ButtonSecondaryPressedBorder" Color="{StaticResource SecondaryPressed}"/>


    <Style x:Key="SuccessButton" TargetType="Button">
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="16 8"/>
        <Setter Property="Padding" Value="8 0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonSuccessForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonSuccessBorder}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="16"
                            MinHeight="40">
                        <ContentPresenter x:Name="ContentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      MinHeight="{TemplateBinding MinHeight}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonSuccessHoverBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonSuccessHoverBorder}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonSuccessPressedBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonSuccessPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DangerButton" TargetType="Button">
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="16 8"/>
        <Setter Property="Padding" Value="8 0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonDangerForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonDangerBorder}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="16"
                            MinHeight="40">
                        <ContentPresenter x:Name="ContentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      MinHeight="{TemplateBinding MinHeight}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonDangerHoverBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonDangerHoverBorder}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonDangerPressedBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonDangerPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WarningButton" TargetType="Button">
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Padding" Value="8 0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonWarningForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonWarningBorder}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="16"
                            MinHeight="40">
                        <ContentPresenter x:Name="ContentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      MinHeight="{TemplateBinding MinHeight}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonWarningHoverBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonWarningHoverBorder}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonWarningPressedBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonWarningPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="16 8"/>
        <Setter Property="Padding" Value="8 0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonPrimaryForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonPrimaryBorder}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="16"
                            MinHeight="40">
                        <ContentPresenter x:Name="ContentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      MinHeight="{TemplateBinding MinHeight}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonPrimaryHoverBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonPrimaryHoverBorder}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonPrimaryPressedBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonPrimaryPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="16 8"/>
        <Setter Property="Padding" Value="8 0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonSecondaryForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonSecondaryBorder}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="16"
                            MinHeight="40">
                        <ContentPresenter x:Name="ContentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      MinHeight="{TemplateBinding MinHeight}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonSecondaryHoverBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonSecondaryHoverBorder}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonSecondaryPressedBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonSecondaryPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GenericSmallIconButtonDanger" x:Name="Button" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="16 8"/>
        <Setter Property="Padding" Value="8 0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonSecondaryForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonSecondaryBorder}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                            MinHeight="30">
                        <ContentPresenter x:Name="ContentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      MinHeight="{TemplateBinding MinHeight}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonDangerHoverBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonDangerHoverBorder}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonDangerPressedBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ButtonDangerPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentSmallIconButton" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="16"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonSecondaryForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                            Height="30">
                        <ContentPresenter x:Name="ContentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      MinHeight="{TemplateBinding MinHeight}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonSecondaryHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonSecondaryPressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
